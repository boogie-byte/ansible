---
- name: Install OpenSSH
  become: yes
  package:
    name: openssh-client
- name: Create OpenSSH client config dir
  file:
    path: "{{ ansible_user_dir }}/.ssh"
    state: directory
    mode: "0700"
- name: Configure OpenSSH client
  template:
    src: templates/ssh_config.j2
    dest: "{{ ansible_user_dir }}/.ssh/config"

- name: Install git package
  become: yes
  package:
    name: git
- name: Create git config dir
  file:
    path: "{{ ansible_user_dir }}/.config/git"
    state: directory
- name: Copy .gitconfig
  template:
    src: templates/gitconfig.j2
    dest: "{{ ansible_user_dir}}/.config/git/config"
- name: Copy .gitignore
  template:
    src: templates/gitignore.j2
    dest: "{{ ansible_user_dir}}/.config/git/ignore"

- name: Create AppImage directory
  become: yes
  file:
    path: /opt/appimages
    state: directory
- name: Add AppImage directory to $PATH
  copy:
    dest: "{{ ansible_user_dir }}/.zshrc.d/appimages_path.sh"
    content: "export PATH=$PATH:/opt/appimages/"

- name: Install neovim dependencies
  become: yes
  package:
    name: "{{ item }}"
  loop:
  - libfuse2t64
  - ripgrep
  - fd-find
- name: Download neovim AppImage
  become: yes
  get_url:
    url: https://github.com/neovim/neovim/releases/download/v0.10.2/nvim.appimage
    dest: /opt/appimages/nvim
    checksum: sha256:970113b5279718126b82adddf3fbed1741db7afabf8a4134635a0d75c9f2c5d8
- name: Make neovim AppImage executable
  become: yes
  file:
    path: /opt/appimages/nvim
    mode: 0755
- name: Fetch neovim configuration
  git:
    repo: git@github.com:boogie-byte/kickstart.nvim.git
    dest: "{{ ansible_user_dir}}/.config/nvim"
- name: "Make 'vim' an alias for 'nvim'"
  copy:
    dest: "{{ ansible_user_dir }}/.zshrc.d/nvim_alias.sh"
    content: |
      alias vim='nvim'
      alias vimdiff='nvim -d'

- name: Install go-migrate
  become: yes
  apt:
    deb: https://github.com/golang-migrate/migrate/releases/download/v4.18.1/migrate.linux-amd64.deb

- name: Download buf binary
  become: yes
  get_url:
    url: https://github.com/bufbuild/buf/releases/download/v1.47.2/buf-Linux-x86_64
    dest: /usr/local/bin/buf
    checksum: sha256:3a0c4da8d46eea8136affa63db202c76a44f8112384160b73c3fffb1cf14b5d8
- name: Make buf binary executable
  become: yes
  file:
    path: /usr/local/bin/buf
    mode: 0755

- name: Install protobuf
  become: yes
  unarchive:
    src: https://github.com/protocolbuffers/protobuf/releases/download/v29.0/protoc-29.0-linux-x86_64.zip
    dest: /usr/local
    remote_src: yes
    exclude:
    - readme.txt
    creates: /usr/local/bin/protoc

- name: Install GitLab CLI tool
  become: yes
  apt:
    deb: https://gitlab.com/gitlab-org/cli/-/releases/v1.49.0/downloads/glab_1.49.0_linux_amd64.deb

- name: Add k8s release key
  become: yes
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    checksum: sha256:7627818cf7bae52f9008c93e8b1f961f53dea11d40891778de216fb1b43be54d
- name: Add k8s repo
  become: yes
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
    filename: pkgs_k8s_io
- name: Install k8s tools
  become: yes
  package:
    name: kubectl
- name: Install ArgoCD CLI tool
  become: yes
  get_url:
    url: https://github.com/argoproj/argo-cd/releases/download/v2.13.1/argocd-linux-amd64
    dest: /usr/local/bin/argocd
    checksum: sha256:8e436f0429d2a88b3181d2cfc460c034070e0ee1c665467271e5d75eb4d55f7f
    mode: 0755
- name: Install kubeseal tool
  become: yes
  get_url:
    url: https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.27.2/kubeseal-0.27.2-darwin-amd64.tar.gz
    dest: /usr/local/bin/kubeseal
    checksum: sha256:95f20591d65c9e7dd3387223b56811a47d0183dca3bb3e66f0c979a2a2f1cd76
    mode: 0755

- name: Install kubelogin
  when: "'/usr/local/bin/kubectl-oidc_login' is not exists"
  block:
  - name: Download kubelogin
    become: yes
    unarchive:
      src: https://github.com/int128/kubelogin/releases/download/v1.31.0/kubelogin_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      include:
        - kubelogin
  - name: Rename kubelogin to kubectl-oidc_login
    become: yes
    command: mv /usr/local/bin/kubelogin /usr/local/bin/kubectl-oidc_login

- name: Install basic packages
  become: yes
  package:
    name: "{{ item }}"
  loop:
  - gcc
  - jq 
  - make
  - perl
  - python3
  - whois
  - unzip
